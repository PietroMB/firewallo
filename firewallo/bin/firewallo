#!/bin/bash
#set -x
ORARIO=`date`
DIRCONF="/etc/firewallo"
source $DIRCONF/firewallo.conf
#DIALOG=`which dialog`
DIALOG="nano"

if [ "$DIALOG" = "" ] ; then
	DIALOG="vi"
	OPTS=""
elif [ "$DIALOG" = "nano" ] ; then
	DIALOG="nano"
	OPTS=""
elif [ "$DIALOG" = "dialog" ] ; then
	DIALOG="nano"
	OPTS=""

elif [ "$DIALOG" != "" ] ; then
	DIALOG="$DIALOG"
	OPTS="0 0"
fi

networking () {
        if [ "$DIALOG" = "dialog" ] ; then
		$DIALOG --backtitle CONFIGURATION_INTERFACES --title interfaces --editbox  /etc/network/interfaces  $OPTS  2> .tmp
	        RETVAL=$?
		echo $RETVAL
                if [ "$RETVAL" = "0" ]; then
		cat .tmp >  /etc/network/interfaces ; rm .tmp
                
        else
		$DIALOG /etc/network/interfaces
		fi
	fi
}

sysctl  () {
	if [ "$DIALOG" = "dialog" ] ; then
 		$DIALOG --backtitle CONFIGURATION_INTERFACES --title interfaces --editbox  /etc/sysctl.conf   $OPTS  2> .tmp
    	RETVAL=$?
        if [ "$RETVAL" = "0" ]; then
        	cat .tmp >  /etc/sysctl.conf ; rm .tmp
        fi     
    else
    	$DIALOG /etc/sysctl.conf
    fi
}


conf () {
	if [ "$DIALOG" = "dialog" ] ; then
		$DIALOG --backtitle CONFIGURATION_EDIT --title firewallo.conf --editbox $DIRCONF/firewallo.conf  $OPTS  2> .tmp 
		RETVAL=$?
       	if [ "$RETVAL" = "0" ]; then
			cat .tmp > $DIRCONF/firewallo.conf ; rm .tmp
		fi  
    else
  		$DIALOG $DIRCONF/firewallo.conf
	fi
}

filter () {
MENU="
fw2fw	fw2lan		fw2wan		fw2vpns		fw2dmz		\
lan2fw	lan2lan		lan2wan		lan2vpns 	lan2dmz  	\
wan2fw	wan2lan		wan2wan		wan2vpns 	wan2dmz   	\
vpns2fw	vpns2lan	vpns2wan	vpns2vpns 	vpns2dmz 	\
dmz2fw	dmz2lan		dmz2wan		dmz2vpns 	dmz2dmz 	\
exit"

select opt in $MENU ; do
	if [ "$opt" = "exit" ] ; then
		main 
	else
		if [ "$DIALOG" = "dialog" ] ; then
			$DIALOG --backtitle FILTER_EDIT --title $opt --editbox $DIRCONF/filter/$opt 		$OPTS 2> .tmp 
			RETVAL=$?
           	if [ "$RETVAL" = "0" ]; then
				cat .tmp > $DIRCONF/filter/$opt ; rm .tmp
			fi			
		else
			$DIALOG $DIRCONF/filter/$opt 
		fi
	fi
done
}

nat  () {
	if [ "$DIALOG" = "dialog" ] ; then
        $DIALOG --backtitle NAT_EDIT --title firewallo.nat --editbox $DIRCONF/nat/firewallo.nat  	  $OPTS 2> .tmp
		RETVAL=$?
    	if [ "$RETVAL" = "0" ]; then
			cat .tmp > $DIRCONF/nat/firewallo.nat ; rm .tmp
		fi

	else
		$DIALOG $DIRCONF/nat/firewallo.nat
	fi
}

mangle  () {
	 if [ "$DIALOG" = "dialog" ] ; then
		$DIALOG --backtitle MANGLE_EDIT --title firewallo.mangle --editbox $DIRCONF/mangle/firewallo.mangle $OPTS 2> .tmp
	    RETVAL=$?
        if [ "$RETVAL" = "0" ]; then
			cat .tmp > $DIRCONF/mangle/firewallo.mangle ; rm .tmp
		fi		
    else
		$DIALOG	$DIRCONF/mangle/firewallo.mangle
	fi
}

route  () {
	if [ "$DIALOG" = "dialog" ] ; then
        $DIALOG --backtitle ROUTE_EDIT --title firewallo.route --editbox $DIRCONF/route/firewallo.route $OPTS 2> .tmp
		RETVAL=$?
        if [ "$RETVAL" = "0" ]; then
		cat .tmp > $DIRCONF/route/firewallo.route ; rm .tmp
		fi

	else
 		$DIALOG $DIRCONF/route/firewallo.route
	fi
}

start () {
if  [ "$NFT" != "" ] ; then
/etc/init.d/firewallo.nft start

elif [ "$IPT" != "" ]  ; then

/etc/init.d/firewallo.iptables start
fi
}

stop () {
if  [ "$NFT" != "" ] ; then
/etc/init.d/firewallo.nft stop
elif [ "$IPT" != "" ] ; then
/etc/init.d/firewallo.iptables stop
fi

}

restart () {
stop
start
}

status () {
less $DIRCONF/status.log
}

rules () {
if [ "$IPT" != "" ]  ;then
$IPT -t filter 	-L -vn > .filter
$IPT -t nat 	-L -vn > .nat
$IPT -t mangle 	-L -vn > .mangle
elif [ "$NFT" != "" ] ; then
$NFT list ruleset > .ruleset
fi

if [ -e .filter ] ; then
echo "##############IPTABLES RULES##################"
cat .filter .nat .mangle | less
fi
if [ -e .ruleset ]  ; then
echo "#################NFT RULESET##################"
cat .ruleset | less
fi

rm .filter .nat .mangle .ruleset 2>/dev/null
main

#done
}
saveconf () {
if [ "$IPT" != "" ] ; then
echo "Save Conf di IPTABLES to /etc/nftables.conf and enable nftables at startup."
#systemctl disable iptables.service
systemctl enable nftables.service
iptables-nft-save > /etc/nftables.conf
echo "..OK"
elif [ "$NFT" != ""  ] ; then
echo "Save Conf to /etc/nftables.conf and enable nftables at startup."
#systemctl disable iptables.service
systemctl enable nftables.service
nft list ruleset > /etc/nftables.conf
echo "..OK"
fi
}
nftiptables () {
echo "SELECT IPTABLES OR NFTABLES"
MENU1="iptables nftables"
opt1=""
select opt1 in $MENU1 ; do
        if [ "$opt1" = "nftables" ] ; then
                export IPT="";
		export NFT="/usr/sbin/nft"
		sed -i 's/IPT=\"\/sbin\/iptables\"//g'  $DIRCONF/firewallo.conf
		sed -i 's/NFT=\"\/usr\/sbin\/nft\"//g'  $DIRCONF/firewallo.conf
		printf 'NFT=\"/usr/sbin/nft\"' >> $DIRCONF/firewallo.conf
		return
        elif [ "$opt1" = "iptables" ] ; then
                export NFT="";
		export IPT="/sbin/iptables"
		sed -i 's/IPT=\"\/sbin\/iptables\"//g'  $DIRCONF/firewallo.conf
		sed -i 's/NFT=\"\/usr\/sbin\/nft\"//g'  $DIRCONF/firewallo.conf
                printf 'IPT=\"/sbin/iptables\"' >> $DIRCONF/firewallo.conf
		return
        fi
done
}
main () {
clear
cat $DIRCONF/motd
if [[ "$NFT" = "" && "$IPT" = "" ]] ;then
	echo " DEVI SETTARE IL Backend Scegli iptables o nftables"
fi

MENU="networking sysctl conf filter nat mangle start stop restart route status rulesview saveconf nft-iptables exit"
select opt in $MENU ; do
	if [ "$opt" = "networking" ] ; then
		networking
	elif [ "$opt" = "conf" ] ; then
		conf
	elif [ "$opt" = "sysctl" ] ; then
                sysctl
	elif [ "$opt" = "filter" ] ; then
                filter
        elif [ "$opt" = "nat" ] ; then
                nat
	elif [ "$opt" = "mangle" ] ; then
                mangle
	elif [ "$opt" = "start" ] ; then
                start
	elif [ "$opt" = "stop" ] ; then
                stop
	elif [ "$opt" = "restart" ] ; then
                restart
	elif [ "$opt" = "route" ] ; then
                route
	elif [ "$opt" = "status" ] ; then
                status
	elif [ "$opt" = "rulesview" ] ; then
                rules
        elif [ "$opt" = "saveconf" ] ; then
                saveconf
        elif [ "$opt" = "nft-iptables" ] ; then
                nftiptables
	elif [ "$opt" = "exit" ] ; then
                echo ByeZzZ.
		exit
	fi
done
}
main
